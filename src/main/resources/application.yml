micronaut:
  application:
    name: web
  server:
    port: 9090
  router:
    static-resources:
      client:
        paths: classpath:static
        mapping: /**
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      redoc:
        paths: classpath:META-INF/swagger/views/redoc
        mapping: /redoc/**
      rapidoc:
        paths: classpath:META-INF/swagger/views/rapidoc
        mapping: /rapidoc/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
#datasources:
#  default:
#    url: jdbc:h2:mem:devDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
#    driverClassName: org.h2.Driver
#    username: sa
#    password: ''
#    schema-generate: CREATE_DROP
#    dialect: H2
datasources:
  default:
    url: jdbc:postgresql://localhost:5432/postgres
    driverClassName: org.postgresql.Driver
    username: postgres
    password: postgres
    schema-generate: none
    dialect: POSTGRES
jpa:
  default:
    packages-to-scan:
      - 'pwr.aiir'
    properties:
      hibernate:
        show_sql: true
        hbm2ddl:
          auto: update
        #          auto: validate
        #          auto: none
jackson:
  serialization:
    writeDatesAsTimestamps: false
kafka:
  bootstrap:
    servers: localhost:9092
  producers:
    default:
      retries: 5
