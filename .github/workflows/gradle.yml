name: Build
# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     types: [opened, synchronize, reopened]
on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  pre_job:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        if: github.ref != 'refs/heads/main'
        with:
          # All of these options are optional, so you can remove them if you are happy with the defaults
          concurrent_skipping: 'same_content'
          skip_after_successful_duplicate: 'true'
          paths_ignore: '["**/README.md", "**/docs/**"]'
          do_not_skip: '["pull_request", "workflow_dispatch", "schedule"]'
  build:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Bump version and push tag
        id: version
        uses: anothrNick/github-tag-action@1.26.0
        env:
          RELEASE_BRANCHES: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: false
          DEFAULT_BUMP: patch
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
#       - name: Cache SonarCloud packages
#         uses: actions/cache@v1
#         with:
#           path: ~/.sonar/cache
#           key: ${{ runner.os }}-sonar
#           restore-keys: ${{ runner.os }}-sonar
#       - name: Cache Node Modules
#         uses: actions/cache@v2
#         id: node-modules-cache
#         with:
#           path: node_modules
#           key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
#           restore-keys: ${{ runner.os }}-node_modules-
#       - name: Cache Npm Cache
#         uses: actions/cache@v2
#         with:
#           path: ~/.npm
#           key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-node-
      - name: Build and analyze
        uses: burrunan/gradle-cache-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          NPM_INSTALL_CACHED: ${{ steps.node-modules-cache.outputs.cache-hit }}
          ARTIFACTS_VERSION: ${{steps.version.outputs.new_tag}}
        with:
          arguments: build
#           properties: |
#             sonar.pullrequest.key=${{ github.event.number }}
#             sonar.pullrequest.branch=${{ github.HEAD_REF }}
#             sonar.pullrequest.base=${{ github.BASE_REF }}
#             sonar.pullrequest.github.repository=${{ github.repository }}
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v2
        with:
          report_paths: '**/build/test-results/**/*.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Publish Docker image
        if: github.ref == 'refs/heads/main'
        uses: burrunan/gradle-cache-action@v1
        env:
          NPM_INSTALL_CACHED: ${{ steps.node-modules-cache.outputs.cache-hit }}
          ARTIFACTS_VERSION: ${{steps.version.outputs.new_tag}}
        with:
          arguments: jib
